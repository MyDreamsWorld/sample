Thank you so much for this wonderful feedback! I’m really happy to hear this, and I can assure you that I always do my best to contribute effectively. One of the key reasons for this is the supportive and encouraging environment created by the team, especially under the leadership of Karim and Said. Their positive energy spreads across the entire team, making work feel less like work and more like spending time with friends.

Thank you again, Karim, and let me say that I truly hope to keep working with you in the future!

Best regards,

_______________

Thank you so much for this wonderful feedback! I’m really happy to hear this, and I can assure you that I always do my best to contribute effectively. One of the key reasons for this is the supportive and encouraging environment created by the team, especially under the leadership of Karim and Said. Their positive energy spreads across the entire team, making work feel less like work and more like spending time with friends.

I’m also incredibly grateful and appreciative of the continuous support you all provide, giving me the opportunity to learn and train consistently.

Thank you again, Karim, and let me say that I truly hope to keep working with you in the future!
_
Thank you so much for the great feedback! I always do my best, and the supportive environment created by Karim and Said makes it a pleasure to work here. I’m also grateful for the continuous support that allows me to keep learning and improving.

Thanks again, Karim, and I look forward to working with you always!
_______________

I want to take a moment to sincerely appreciate the incredible support and leadership provided by our management team. The continuous encouragement and guidance that I, as well as the entire team, receive are truly invaluable. Working under the leadership of Karim has been both a rewarding and inspiring experience. His positive approach and ability to lead by example foster a collaborative and uplifting work environment, where everyone feels valued and motivated.

Karim’s leadership not only encourages the team to strive for excellence but also creates a space where we are constantly learning and improving. The open communication and transparency that management upholds ensure that we feel confident in our work, knowing that we are supported every step of the way.

I genuinely enjoy working with Karim and the rest of the team. Their dedication to both the team’s success and personal development has been a strong motivating factor for me. It pushes me to give my best and deliver the highest quality work possible. The enthusiasm and energy they bring to the workplace are infectious, making it feel more like a gathering of friends than just another day at work.

I feel truly fortunate to be a part of such a positive and inspiring team, and I’m looking forward to continuing this journey, working together to achieve even greater successes.

1 _______________________
Step-by-Step Guide for Writing Test Cases for Acceptance Criteria and Issues:
To create Test Cases based on the Acceptance Criteria and Issues provided, you need to:

Understand the Requirement: Start by analyzing the acceptance criteria and issues to identify what feature or behavior you need to test.
Identify the Expected Behavior: This involves noting what the system is supposed to do as described in the acceptance criteria or issue.
Write the Test Case: For each scenario, you define the steps needed to test the feature, the input conditions, and the expected outcome.
Classify the Test Cases: Based on the testing stage or issue (e.g., PASS, BLOCKED, etc.), make sure to tag them properly to show the testing result.
Here’s how to break down and write the test cases step by step:

Test Cases for Ability to Download Exhibits (Acceptance Criteria):
Test Case 1: Download a Single Exhibit
Acceptance Criteria 1/3
Description: Test the ability to download a selected exhibit.
Result: (PASS)

Test Case ID: TC_Download_001
Objective: Verify that a user can download a selected exhibit.
Precondition: User is logged in, and exhibits are available.
Steps to Execute:
Log in to the application.
Navigate to "Proceedings and Investigations."
Expand the "List of Investigations."
Click on "Exhibit list."
Select one exhibit from the list.
Click on the "Download" button for the selected exhibit.
Expected Result: The selected exhibit is successfully downloaded to the user's device.
Test Case 2: Download Multiple Exhibits
Acceptance Criteria 2/3
Description: Test the ability to download all selected exhibits at once.
Result: (BLOCKED; Development Stage)

Test Case ID: TC_Download_002
Objective: Verify that a user can download multiple selected exhibits at once.
Precondition: Multiple exhibits are available for selection, but the feature is under development.
Steps to Execute:
Log in to the application.
Navigate to "Proceedings and Investigations."
Expand the "List of Investigations."
Click on "Exhibit list."
Select multiple exhibits from the list.
Click on the "Download All" button.
Expected Result: Blocked - The functionality is not yet available in the current build.
Test Case 3: Test File Size Limit for Downloads
Acceptance Criteria 3/3
Description: Ensure files within 5GB size can be downloaded.
Result: (BLOCKED; Development Stage)

Test Case ID: TC_Download_003
Objective: Verify that a user can download files that are within the 5GB size limit.
Precondition: Exhibit files should not exceed 5GB.
Steps to Execute:
Log in to the application.
Navigate to "Proceedings and Investigations."
Expand the "List of Investigations."
Click on "Exhibit list."
Select an exhibit that is below 5GB in size.
Click on the "Download" button.
Expected Result: Blocked - The feature is under development.
Test Cases for Issue 1: Unauthorized Access to Clickable File Link:
Test Case 4: Verify Clickable File Link Without Login
Issue 1

Test Case ID: TC_Unauth_001
Objective: Ensure the file link is not clickable without logging in.
Precondition: User is not logged in.
Steps to Execute:
Open the application without logging in.
Click on the "Investigations" link from the "Proceedings and Investigations" section.
Expand one of the "List of Investigations."
Click on the "Exhibit list" link.
Attempt to click on the file link.
Expected Result: The file link should be disabled, and no box should appear at the bottom-left of the screen. The user should receive feedback indicating the need for authentication.
Test Cases for Issue 2: Redirecting to an XML File on Session Expiry:
Test Case 5: Check Redirection After Session Expiry
Issue 2

Test Case ID: TC_Session_001
Objective: Ensure that after session expiration, the user is either redirected to the login page or receives a proper error message, not an XML file.
Precondition: User has logged in, and the session is active.
Steps to Execute:
Log in to the application.
Navigate to "Proceedings and Investigations."
Expand one of the "List of Investigations."
Click on the "Exhibit list" link.
Let the session expire or terminate it manually.
Attempt to click on a file link after the session expires.
Expected Result: The user should be redirected to the login page or be shown a tooltip indicating the session has expired. No XML file should be displayed.
Explanation of How I Created the Test Cases:
Understand the Acceptance Criteria and Issues: I carefully read the acceptance criteria and issues, ensuring that I grasped the expected functionality and the specific problems that were outlined.
Define the Objective: For each test case, I defined a clear objective. This is crucial because it determines the purpose of the test.
Preconditions: I set preconditions to establish what state the system should be in before running the test.
Steps to Execute: For each test case, I outlined detailed steps a tester should follow to verify the system's behavior.
Expected Results: I defined what the correct outcome should be after executing the test. This is compared against the actual result to determine if the test passes or fails.
Test Case IDs: I labeled each test case with a unique identifier to keep them organized and referenced easily during the testing process.
By following these steps, you can systematically test features and issues to ensure the software behaves as expected. Let me know if you'd like further clarification on any part!
_____________________________
2 _______________________

Step-by-Step Guide for Writing Test Cases Based on the User Story, Acceptance Criteria, and Notes:
To write test cases based on the User Story, Acceptance Criteria, and Testing Notes, follow these steps:

Understand the User Story: Grasp the purpose of the user story, which in this case, is to create an account page where users can view and edit their account information.
Review Acceptance Criteria: Acceptance criteria outline the conditions under which the user story is considered complete. This will guide the core functionalities to test.
Identify Key Functions to Test: Break down the key features such as displaying information, editing, and handling permissions.
Write Detailed Test Cases: Define each test case with steps, inputs, and expected outcomes.
Address Testing Notes: Incorporate testing notes to cover any additional checks for bugs, UI issues, or data validation problems.
Here’s how you can approach it:

Test Cases for Account Page User Story
Test Case 1: Display User Information on Account Page
User Story Reference:
As a developer, I would like to create an Account page so that the user can view and edit their account information.

Acceptance Criteria:
Given that I have an account page, I will display the account page to the end user.

Test Case ID: TC_Account_001
Objective: Verify that the user’s account page correctly displays their information.
Precondition: User must be logged in.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Check that the user’s name, email, phone number, and address are displayed.
Expected Result: The user’s account information should be visible on the account page.
Test Case 2: Update User Contact Information
User Story Reference:
As a developer, I would like to create an Account page so that the user can edit their account information.

Acceptance Criteria:
Given that the account page is updated, the user can update their contact information.

Test Case ID: TC_Account_002
Objective: Verify that a user can edit and save changes to their contact information.
Precondition: User must be logged in.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Edit the contact information fields (phone number, address, city, etc.).
Save the changes.
Refresh the page and confirm the changes have been saved.
Expected Result: The updated contact information should be saved and displayed correctly.
Test Case 3: Notify User After Account Update
User Story Reference:
As a developer, I want to notify the user that they cannot access protected proceedings until approved by XYZ.

Acceptance Criteria:
Given that the account page is updated, the user will receive a notification about restricted access.

Test Case ID: TC_Account_003
Objective: Verify that a user is notified they cannot access protected proceedings after updating their account.
Precondition: User must be logged in, and the account page is updated.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Update the account information and save changes.
Check if a notification message appears, informing the user that access to protected proceedings is restricted until approved.
Expected Result: The user should receive a notification confirming restricted access.
Test Case 4: Trinity Enhance Privileges Removed After Account Update
User Story Reference:
As a developer, I want to remove the user's enhanced privileges when the account page is updated.

Acceptance Criteria:
Given that the account page is updated, enhanced privileges should be removed.

Test Case ID: TC_Account_004
Objective: Verify that the user’s enhanced privileges are removed after updating their account.
Precondition: User must be logged in with enhanced privileges.
Steps to Execute:
Log in to the application with enhanced privileges.
Navigate to the "Account" page.
Update any field and save changes.
Check if enhanced privileges (e.g., access to certain features) are removed after the update.
Expected Result: Enhanced privileges should be removed after the account update.
Test Cases Addressing Notes:
Test Case 5: Verify Read-Only Email Fields
Notes Reference:
Email Address and Verify E-mail address fields are read-only.

Test Case ID: TC_Account_005
Objective: Verify that the "Email Address" and "Verify E-mail Address" fields are displayed as read-only.
Precondition: User must be logged in.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Try to modify the "Email Address" and "Verify E-mail Address" fields.
Expected Result: Both fields should be displayed as read-only and cannot be edited.
Test Case 6: Verify Cascading Dropdown for City and Province/State
Notes Reference:
City input should be a cascading dropdown based on Province/State selection.

Test Case ID: TC_Account_006
Objective: Verify that the City dropdown list updates based on the selected Province/State.
Precondition: User must be logged in.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Select a different Province/State from the dropdown list.
Verify that the City dropdown updates with relevant cities based on the selected Province/State.
Expected Result: The City dropdown should correctly display cities based on the selected Province/State.
Test Case 7: Verify Postal Code Format Validation
Notes Reference:
"Postal Code/Zip Code" field accepts incorrect format.

Test Case ID: TC_Account_007
Objective: Verify that the Postal Code/Zip Code field enforces the correct format.
Precondition: User must be logged in.
Steps to Execute:
Log in to the application.
Navigate to the "Account" page.
Enter an incorrect format in the Postal Code/Zip Code field (e.g., letters in a numeric field).
Attempt to save changes.
Expected Result: The system should validate the format and display an error message if the format is incorrect.
Explanation of How I Created the Test Cases:
Analyze the User Story and Acceptance Criteria: I read the user story to understand the main purpose of the account page (viewing and editing user information). The acceptance criteria gave me clear instructions on what functionality to test (e.g., displaying the account page, editing information, and removing privileges).

Define Objectives: Each test case has a clear objective, which matches the functionality described in the user story or acceptance criteria.

Identify Preconditions: Some actions can only be tested if the user is logged in, has privileges, or has the correct information displayed. I made sure to note these preconditions for each test.

Write Detailed Steps: Each test case contains step-by-step instructions on how to test the functionality, ensuring consistency in testing.

Expected Results: I wrote the expected results based on the acceptance criteria and notes, describing how the system should behave after each step.

Address Testing Notes: I carefully considered the notes to cover additional UI and validation checks, such as read-only fields and cascading dropdowns.

By following these steps, you can systematically test the features described in the user story. Let me know if you need any clarifications!
_____________________________
3 _______________________
